// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiceMornitoringTool.API.Relational;

#nullable disable

namespace ServiceMornitoringTool.API.Relational.Migrations
{
    [DbContext(typeof(ServiceMonitoringContext))]
    [Migration("20220817085751_ChangedTheMethodStatusType")]
    partial class ChangedTheMethodStatusType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ServiceMornitoringTool.API.Core.DomainModel.ServiceMonitoringDomainModel.Entities.ServiceMethod", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ExecutedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExecutionTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExecutionsStatus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Request")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceMonitorAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<TimeSpan>("TimeElapsed")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("ServiceMonitorAggregateId");

                    b.ToTable("ServiceMethod");
                });

            modelBuilder.Entity("ServiceMornitoringTool.API.Core.DomainModel.ServiceMonitoringDomainModel.ServiceMonitorAggregate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ServiceMonitorAggregate");
                });

            modelBuilder.Entity("ServiceMornitoringTool.API.Core.DomainModel.ServiceMonitoringDomainModel.Entities.ServiceMethod", b =>
                {
                    b.HasOne("ServiceMornitoringTool.API.Core.DomainModel.ServiceMonitoringDomainModel.ServiceMonitorAggregate", null)
                        .WithMany("ServiceMethods")
                        .HasForeignKey("ServiceMonitorAggregateId");
                });

            modelBuilder.Entity("ServiceMornitoringTool.API.Core.DomainModel.ServiceMonitoringDomainModel.ServiceMonitorAggregate", b =>
                {
                    b.Navigation("ServiceMethods");
                });
#pragma warning restore 612, 618
        }
    }
}
